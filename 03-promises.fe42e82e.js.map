{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAACN,WAASC,UAGlBM,EAAO,CAACP,WAASC,S,GAElBA,E,IAnCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAMC,iBAON,IALA,IAA6DC,EAAnBF,EAAMG,cAAzCC,SAAWC,EAAMH,EAANG,OAAQhB,EAAKa,EAALb,MAAOiB,EAAIJ,EAAJI,KAC3BC,GAAkBF,EAAOG,MAC3BC,GAAgBpB,EAAMmB,MACpBE,GAAaJ,EAAKE,MAEfpB,EAAW,EAAGA,GAAYmB,EAAgBnB,IACjDD,EAAcC,EAAUqB,GAAcE,MAAK,SAAAC,GACzC3B,EAAA4B,OAAOC,QAAQ,uBAA+CC,OAAtBH,EAAOxB,SAAS,QAAmB2B,OAAbH,EAAOvB,MAAM,M,IAC1E2B,OAAM,SAAAC,GACPhC,EAAA4B,OAAOK,QAAQ,sBAAyCH,OAAnBE,EAAI7B,SAAS,QAAgB2B,OAAVE,EAAI5B,MAAM,M,IAGpEoB,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onNotifyPromises);\n\nfunction onNotifyPromises(event) {\n  event.preventDefault();\n\n  const {elements: {amount, delay, step}} = event.currentTarget;\n  const amountPromises = +amount.value;\n  let delayTimeout = +delay.value;\n  const stepDelay = +step.value;\n\n  for (let position = 1; position <= amountPromises; position++) {\n    createPromise(position, delayTimeout).then(result => {\n      Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    }).catch(err => {\n      Notify.failure(`❌ Rejected promise ${err.position} in ${err.delay}ms`);\n    });\n\n    delayTimeout += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position,delay});\n      } else {\n        // Reject\n        reject({position,delay});\n      }\n    }, delay);\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","amount","step","amountPromises","value","delayTimeout","stepDelay","then","result","Notify","success","concat","catch","err","failure"],"version":3,"file":"03-promises.fe42e82e.js.map"}